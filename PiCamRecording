#### NOTES ON HOW TO RUN THIS FILE ####

# to run without the code stopping even when you close your computer
#nohup sudo python3 pi_cam_code.py &

# kill running code when you are done with the test
#sudo pkill -f pi_cam_code.py

# see whatâ€™s running in the background, make sure you actually killed code
#ps aux | grep python

# make led go back to normal state of blinking when booting/recieving data or whatnot

#sudo bash -c 'echo mmc0 > /sys/class/leds/ACT/trigger'




# Core opencv code provided by Einsteinium Studios
# Revisions to work with Pi Camera v3 by Briana Bouchard
# More revisions by Natalie Nicoletti

import numpy as np
import cv2
from picamera2 import Picamera2
from libcamera import controls
from picamera2.encoders import H264Encoder
from time import sleep, time

# Paths to the onboard LED control
LED_TRIGGER_PATH = "/sys/class/leds/ACT/trigger"
LED_BRIGHTNESS_PATH = "/sys/class/leds/ACT/brightness"
# Function to set the LED trigger mode
def set_led_trigger(mode):
    with open(LED_TRIGGER_PATH, "w") as f:
        f.write(mode)

# Function to control the LED brightness
def set_led_brightness(value):
    with open(LED_BRIGHTNESS_PATH, "w") as f:
        f.write(str(value))
# Configure the ACT LED for manual control
set_led_trigger("none")  # Disable default trigger mode to allow manual control

picam2 = Picamera2() # assigns camera variable
picam2.set_controls({"AfMode": controls.AfModeEnum.Continuous}) # sets auto foc>
video_config = picam2.create_video_configuration()
picam2.configure(video_config)
encoder = H264Encoder(2500000)
sleep(1) # wait to give camera time to start up
picam2.start() #activates camera

# Configure the onboard LED for manual control
set_led_trigger("none")  # Disable default trigger mode

try:
    while True:
        
        # Display camera
        # take a video recording 
        timestamp = int(time())
        filename = f'/home/pi/video_{timestamp}.h264'
        picam2.start_recording(encoder, filename) 
        sleep(10) 
        picam2.stop_recording()
        # Blink the onboard LED during the 10-second wait
        for i in range(1800):  # Blink for 10 seconds (1 blink per second)
            set_led_brightness(1)  # Turn LED on
            sleep(0.5)
            set_led_brightness(0)  # Turn LED off
            sleep(0.5)

except KeyboardInterrupt:
    print('All done')
finally:
    # Restore the LED's default behavior
    set_led_trigger("mmc0")  # Re-enable SD card activity indicator
